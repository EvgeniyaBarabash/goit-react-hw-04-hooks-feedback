{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","s","btnWrapper","map","option","btn","type","onClick","Section","title","children","section","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prev","Error","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,IAAM,6BAA6B,WAAa,sC,iBCAlED,EAAOC,QAAU,CAAC,QAAU,2B,+ICObC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCyBEC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACa,IAAVD,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,qCACE,uCAAUE,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,a,gBCQKC,EApBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,WAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEI,IACbC,KAAK,SAELC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GAHIA,S,gBCIAI,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASV,UAAWC,IAAEU,QAAtB,UACE,6BAAKF,IACJC,MCDQ,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOnB,EAAP,KAAYsB,EAAZ,KAiBMC,EAAqB,WACzB,OAAOzB,EAAOC,EAAUC,GAO1B,OACE,qCACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA7BkB,SAAAK,GACxB,OAAQA,GACN,IAAK,OACHU,GAAQ,SAAAI,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHH,GAAW,SAAAG,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHF,GAAO,SAAAE,GAAI,OAAIA,EAAO,KACtB,MACF,QACE,MAAM,IAAIC,MAAJ,iCAAoCf,UAoB5C,cAAC,EAAD,CAASK,MAAM,aAAf,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,mBAlB0B,IAAzBqB,IACH,EACAG,KAAKC,MAAO7B,EAAOyB,IAAwB,YC3BnDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7873108d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1OTEz\",\"btnWrapper\":\"FeedbackOptions_btnWrapper__2xSJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2qZSG\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from './Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total === 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.btnWrapper}>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.btn}\r\n          type=\"button\"\r\n          key={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import { useState } from 'react';\r\nimport './App.css';\r\nimport Statistics from 'components/Statistics/Statistics';\r\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\r\nimport Section from 'components/Section/Section';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const handleAddFeadback = option => {\r\n    switch (option) {\r\n      case \"good\":\r\n        setGood(prev => prev + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral(prev => prev + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad(prev => prev + 1);\r\n        break;\r\n      default:\r\n        throw new Error(`Invalid feedback type: ${option}`);\r\n    }\r\n  }\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return countTotalFeedback() === 0\r\n      ? 0\r\n      : Math.round((good / countTotalFeedback()) * 100);\r\n  };\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={handleAddFeadback}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={countTotalFeedback()}\r\n          positivePercentage={countPositiveFeedbackPercentage()}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}